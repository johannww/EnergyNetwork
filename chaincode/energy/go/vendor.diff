diff -r vendorDefault/github.com/hyperledger/fabric-chaincode-go/shim/response.go vendor/github.com/hyperledger/fabric-chaincode-go/shim/response.go
26a27,29
> 		//JOHANN PRIORITY
> 		Priority:               pb.Priority_MEDIUM,
> 		BypassPhantomReadCheck: false,
29a33,51
> //SuccessWithPriority with setting transaction priority
> func SuccessWithPriority(payload []byte, transactionPriority pb.Priority) pb.Response {
> 	return pb.Response{
> 		Status:  OK,
> 		Payload: payload,
> 		//JOHANN PRIORITY
> 		Priority:               transactionPriority,
> 		BypassPhantomReadCheck: false,
> 	}
> }
> 
> //SuccessWithPriorityBypassPhantoReadCheck with setting transaction priority and
> //bypassing PHANTOM_READ_CONFLICT verification at commit time
> func SuccessWithPriorityBypassPhantoReadCheck(payload []byte, transactionPriority pb.Priority) pb.Response {
> 	response := SuccessWithPriority(payload, transactionPriority)
> 	response.BypassPhantomReadCheck = true
> 	return response
> }
> 
33,34c55,57
< 		Status:  ERROR,
< 		Message: msg,
---
> 		Status:                 ERROR,
> 		Message:                msg,
> 		BypassPhantomReadCheck: false,
diff -r vendorDefault/github.com/hyperledger/fabric-protos-go/peer/proposal_response.pb.go vendor/github.com/hyperledger/fabric-protos-go/peer/proposal_response.pb.go
7a8,9
> 	math "math"
> 
10d11
< 	math "math"
23a25,53
> //JOHANN Priority Enum for transactions
> type Priority int32
> 
> const (
> 	Priority_HIGH   Priority = 0
> 	Priority_MEDIUM Priority = 1
> 	Priority_LOW    Priority = 2
> )
> 
> var Priority_name = map[int32]string{
> 	0: "HIGH",
> 	1: "MEDIUM",
> 	2: "LOW",
> }
> 
> var Priority_value = map[string]int32{
> 	"HIGH":   0,
> 	"MEDIUM": 1,
> 	"LOW":    2,
> }
> 
> func (x Priority) String() string {
> 	return proto.EnumName(Priority_name, int32(x))
> }
> 
> func (Priority) EnumDescriptor() ([]byte, []int) {
> 	return fileDescriptor_2ed51030656d961a, []int{0}
> }
> 
119,122c149,158
< 	Payload              []byte   `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
< 	XXX_NoUnkeyedLiteral struct{} `json:"-"`
< 	XXX_unrecognized     []byte   `json:"-"`
< 	XXX_sizecache        int32    `json:"-"`
---
> 	Payload []byte `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
> 	//JOHANN a priority set by the chaincode Response to be evaluated when ordering transactions
> 	Priority Priority `protobuf:"varint,4,opt,name=priority,proto3,enum=protos.Priority" json:"priority,omitempty"`
> 	//JOHANN flag to prevent the ChaincodeAction to have the
> 	//shim.QueryStateByRange checked in the commit phase.
> 	//If set to 'true', avoids invalidation due to PHANTOM_READ_CONFLICT
> 	BypassPhantomReadCheck bool     `protobuf:"varint,5,opt,name=bypassPhantomReadCheck,proto3" json:"bypassPhantomReadCheck,omitempty"`
> 	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
> 	XXX_unrecognized       []byte   `json:"-"`
> 	XXX_sizecache          int32    `json:"-"`
170a207,220
> func (m *Response) GetPriority() Priority {
> 	if m != nil {
> 		return m.Priority
> 	}
> 	return Priority_HIGH
> }
> 
> func (m *Response) GetBypassPhantomReadCheck() bool {
> 	if m != nil {
> 		return m.BypassPhantomReadCheck
> 	}
> 	return false
> }
> 
292a343
> 	proto.RegisterEnum("protos.Priority", Priority_name, Priority_value)
302,326c353,382
< 	// 371 bytes of a gzipped FileDescriptorProto
< 	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x92, 0x41, 0x6b, 0xe3, 0x30,
< 	0x10, 0x85, 0x71, 0x76, 0x93, 0x4d, 0x94, 0x2c, 0x04, 0x2f, 0xec, 0x9a, 0x10, 0xd8, 0xe0, 0x5e,
< 	0x72, 0x48, 0x64, 0x68, 0x29, 0xf4, 0x1c, 0x28, 0xed, 0x31, 0x88, 0xd2, 0x43, 0x29, 0x14, 0x39,
< 	0x99, 0xc8, 0x26, 0xb6, 0x25, 0x34, 0x72, 0x69, 0x7e, 0x70, 0xff, 0x47, 0xb1, 0x6c, 0x39, 0x6e,
< 	0xe9, 0xc9, 0xbc, 0xf1, 0xd3, 0x37, 0xf3, 0x46, 0x22, 0x73, 0x05, 0xa0, 0x23, 0xa5, 0xa5, 0x92,
< 	0xc8, 0xb3, 0x17, 0x0d, 0xa8, 0x64, 0x81, 0x40, 0x95, 0x96, 0x46, 0xfa, 0x03, 0xfb, 0xc1, 0xd9,
< 	0x7f, 0x21, 0xa5, 0xc8, 0x20, 0xb2, 0x32, 0x2e, 0x0f, 0x91, 0x49, 0x73, 0x40, 0xc3, 0x73, 0x55,
< 	0x1b, 0xc3, 0x77, 0x8f, 0x4c, 0xb7, 0x0d, 0x84, 0x35, 0x0c, 0x3f, 0x20, 0xbf, 0x5e, 0x41, 0x63,
< 	0x2a, 0x8b, 0xc0, 0x5b, 0x78, 0xcb, 0x3e, 0x73, 0xd2, 0xbf, 0x21, 0xa3, 0x96, 0x10, 0xf4, 0x16,
< 	0xde, 0x72, 0x7c, 0x39, 0xa3, 0x75, 0x0f, 0xea, 0x7a, 0xd0, 0x07, 0xe7, 0x60, 0x67, 0xb3, 0xbf,
< 	0x22, 0x43, 0x37, 0x63, 0xf0, 0xd3, 0x1e, 0x9c, 0xd6, 0x27, 0x90, 0xba, 0xbe, 0xac, 0x75, 0x54,
< 	0x13, 0x28, 0x7e, 0xca, 0x24, 0xdf, 0x07, 0xfd, 0x85, 0xb7, 0x9c, 0x30, 0x27, 0xfd, 0x6b, 0x32,
< 	0x86, 0x62, 0x2f, 0x35, 0x42, 0x0e, 0x85, 0x09, 0x06, 0x16, 0xf5, 0xc7, 0xa1, 0x6e, 0xcf, 0xbf,
< 	0x58, 0xd7, 0x17, 0x3e, 0x92, 0x61, 0x1b, 0xef, 0x2f, 0x19, 0xa0, 0xe1, 0xa6, 0xc4, 0x26, 0x5d,
< 	0xa3, 0xaa, 0xa6, 0x39, 0x20, 0x72, 0x01, 0x36, 0xda, 0x88, 0x39, 0xd9, 0x1d, 0xe7, 0xc7, 0xa7,
< 	0x71, 0xc2, 0x67, 0xf2, 0xef, 0xeb, 0xfa, 0xb6, 0xcd, 0xa4, 0x17, 0xe4, 0x77, 0x7b, 0x3d, 0x09,
< 	0xc7, 0xc4, 0x76, 0x9b, 0xb0, 0x89, 0x2b, 0xde, 0x73, 0x4c, 0xfc, 0x39, 0x19, 0xc1, 0x9b, 0x81,
< 	0xc2, 0x2e, 0xbb, 0x67, 0x0d, 0xe7, 0x42, 0x78, 0x47, 0xc6, 0x9d, 0x44, 0xfe, 0x8c, 0x0c, 0x9b,
< 	0x4c, 0xba, 0x81, 0xb5, 0xba, 0x02, 0x61, 0x2a, 0x0a, 0x6e, 0x4a, 0x0d, 0x0e, 0xd4, 0x16, 0x36,
< 	0x47, 0x12, 0x4a, 0x2d, 0x68, 0x72, 0x52, 0xa0, 0x33, 0xd8, 0x0b, 0xd0, 0xf4, 0xc0, 0x63, 0x9d,
< 	0xee, 0xdc, 0xe2, 0xaa, 0xd7, 0xb4, 0xf9, 0x26, 0xca, 0xee, 0xc8, 0x05, 0x3c, 0xad, 0x44, 0x6a,
< 	0x92, 0x32, 0xa6, 0x3b, 0x99, 0x47, 0x1d, 0x46, 0x54, 0x33, 0xd6, 0x35, 0x63, 0x2d, 0x64, 0x54,
< 	0x61, 0xe2, 0xfa, 0xf1, 0x5d, 0x7d, 0x04, 0x00, 0x00, 0xff, 0xff, 0xbf, 0xd6, 0x97, 0x69, 0xa3,
< 	0x02, 0x00, 0x00,
---
> 	// 454 bytes of a gzipped FileDescriptorProto
> 	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x93, 0x61, 0x8b, 0xd3, 0x40,
> 	0x10, 0x86, 0x4d, 0xef, 0xae, 0x97, 0x4e, 0xab, 0x84, 0x15, 0xce, 0x50, 0x0e, 0x2c, 0xf1, 0x4b,
> 	0x95, 0x5e, 0x02, 0x8a, 0xe2, 0xe7, 0xd3, 0xe3, 0x7a, 0xe0, 0x61, 0x59, 0x14, 0x41, 0x04, 0xd9,
> 	0xb4, 0x73, 0x49, 0x68, 0x93, 0x5d, 0x76, 0xb6, 0x62, 0xff, 0x9b, 0x7f, 0xc7, 0xff, 0x21, 0xd9,
> 	0x64, 0xd3, 0x2a, 0xde, 0xa7, 0xf0, 0xce, 0xbe, 0xfb, 0xcc, 0xbc, 0xbb, 0x1b, 0x38, 0x57, 0x88,
> 	0x3a, 0x51, 0x5a, 0x2a, 0x49, 0x62, 0xf3, 0x5d, 0x23, 0x29, 0x59, 0x11, 0xc6, 0x4a, 0x4b, 0x23,
> 	0x59, 0xdf, 0x7e, 0x68, 0xfc, 0x34, 0x93, 0x32, 0xdb, 0x60, 0x62, 0x65, 0xba, 0xbd, 0x4b, 0x4c,
> 	0x51, 0x22, 0x19, 0x51, 0xaa, 0xc6, 0x18, 0xfd, 0xf6, 0x20, 0x58, 0xb4, 0x10, 0xde, 0x32, 0x58,
> 	0x08, 0xa7, 0x3f, 0x50, 0x53, 0x21, 0xab, 0xd0, 0x9b, 0x78, 0xd3, 0x13, 0xee, 0x24, 0x7b, 0x0b,
> 	0x83, 0x8e, 0x10, 0xf6, 0x26, 0xde, 0x74, 0xf8, 0x72, 0x1c, 0x37, 0x3d, 0x62, 0xd7, 0x23, 0xfe,
> 	0xe4, 0x1c, 0x7c, 0x6f, 0x66, 0x33, 0xf0, 0xdd, 0x8c, 0xe1, 0xb1, 0xdd, 0x18, 0x34, 0x3b, 0x28,
> 	0x76, 0x7d, 0x79, 0xe7, 0xa8, 0x27, 0x50, 0x62, 0xb7, 0x91, 0x62, 0x15, 0x9e, 0x4c, 0xbc, 0xe9,
> 	0x88, 0x3b, 0xc9, 0x5e, 0xc3, 0x10, 0xab, 0x95, 0xd4, 0x84, 0x25, 0x56, 0x26, 0xec, 0x5b, 0xd4,
> 	0x63, 0x87, 0xba, 0xda, 0x2f, 0xf1, 0x43, 0x5f, 0xf4, 0xcb, 0x03, 0xbf, 0xcb, 0x77, 0x06, 0x7d,
> 	0x32, 0xc2, 0x6c, 0xa9, 0x8d, 0xd7, 0xaa, 0xba, 0x6b, 0x89, 0x44, 0x22, 0x43, 0x9b, 0x6d, 0xc0,
> 	0x9d, 0x3c, 0x9c, 0xe7, 0xe8, 0xef, 0x79, 0x66, 0xe0, 0x2b, 0x5d, 0x48, 0x5d, 0x98, 0x9d, 0xcd,
> 	0xf5, 0x68, 0x9f, 0x6b, 0xd1, 0xd6, 0x79, 0xe7, 0x60, 0x6f, 0xe0, 0x2c, 0xdd, 0x29, 0x41, 0xb4,
> 	0xc8, 0x45, 0x65, 0x64, 0xc9, 0x51, 0xac, 0xde, 0xe5, 0xb8, 0x5c, 0xdb, 0x98, 0x3e, 0xbf, 0x67,
> 	0x35, 0xfa, 0x06, 0x4f, 0xfe, 0xbd, 0xa5, 0x45, 0x3b, 0xc0, 0x33, 0x78, 0xd8, 0xbd, 0x82, 0x5c,
> 	0x50, 0x6e, 0x33, 0x8d, 0xf8, 0xc8, 0x15, 0xe7, 0x82, 0x72, 0x76, 0x0e, 0x03, 0xfc, 0x69, 0xb0,
> 	0xb2, 0x77, 0xda, 0xb3, 0x86, 0x7d, 0x21, 0xba, 0x86, 0xe1, 0xc1, 0xc1, 0xb1, 0x31, 0xf8, 0xed,
> 	0xd1, 0xe9, 0x16, 0xd6, 0xe9, 0x1a, 0x44, 0x45, 0x56, 0x09, 0xb3, 0xd5, 0xe8, 0x40, 0x5d, 0xe1,
> 	0xc5, 0x73, 0xf0, 0x5d, 0x68, 0xe6, 0xc3, 0xf1, 0xfc, 0xe6, 0x7a, 0x1e, 0x3c, 0x60, 0x00, 0xfd,
> 	0xdb, 0xab, 0xf7, 0x37, 0x9f, 0x6f, 0x03, 0x8f, 0x9d, 0xc2, 0xd1, 0x87, 0x8f, 0x5f, 0x82, 0xde,
> 	0xe5, 0x1a, 0x22, 0xa9, 0xb3, 0x38, 0xdf, 0x29, 0xd4, 0x1b, 0x5c, 0x65, 0xa8, 0xe3, 0x3b, 0x91,
> 	0xea, 0x62, 0xe9, 0x4e, 0xaf, 0x7e, 0xdf, 0x97, 0xff, 0x49, 0xbd, 0x5c, 0x8b, 0x0c, 0xbf, 0xce,
> 	0xb2, 0xc2, 0xe4, 0xdb, 0x34, 0x5e, 0xca, 0x32, 0x39, 0x60, 0x24, 0x0d, 0xe3, 0xa2, 0x61, 0x5c,
> 	0x64, 0x32, 0xa9, 0x31, 0x69, 0xf3, 0x3b, 0xbc, 0xfa, 0x13, 0x00, 0x00, 0xff, 0xff, 0x62, 0xbf,
> 	0x29, 0x01, 0x35, 0x03, 0x00, 0x00,
